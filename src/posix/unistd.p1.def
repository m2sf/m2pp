(*!m2iso+p1*) (* Copyright (c) 2017 Modula-2 Software Foundation *)

<*ASSIGN(Foreign,TRUE)*> <*ASSIGN(Calling,"CCalling")*>

DEFINITION MODULE unistd; (* p1 version *)

(* Modula-2 interface to POSIX unistd *)

FROM SYSTEM IMPORT ADDRESS, CARD32, INT32;
<*IF(ARCH=x86)THEN*>
FROM SYSTEM IMPORT CARD64, INT64;
<*END*>


(* type int *)

TYPE INT = INT32;


(* types size_t and ssize_t *)

(* PowerPC 32-bit *)
<*IF(ARCH=ppc)THEN*>
TYPE SizeT = CARD32;
TYPE SSizeT = INT32;

(* Intel x86 32-bit *)
<*ELSIF(ARCH=i386)THEN*>
TYPE SizeT = CARD32;
TYPE SSizeT = INT32;

(* Intel/AMD x86 64-bit *)
<*ELSIF(ARCH=x86)THEN*>
TYPE SizeT = CARD64;
TYPE SSizeT = INT64;

<*ELSE*>
(* unsupported architecture *)
<*END*>


TYPE AccessMode = INT [0..7];


CONST
  FileExists = 0; (* 0b0000 *)
  Executable = 1; (* 0b0001 *)
  Writable   = 2; (* 0b0010 *)
  Readable   = 4; (* 0b0100 *)


CONST
  StdIn  = 0; (* STDIN_FILENO *)
  StdOut = 1; (* STDOUT_FILENO *)
  StdErr = 2; (* STDERR_FILENO *)


(* foreign declaration for access() *)

PROCEDURE access ( path : ARRAY OF CHAR; mode : AccessMode ) : INT;


(* foreign declaration for read() *)

PROCEDURE read ( fildes : INT; buf : ADDRESS; nbyte : SizeT ) : SSizeT;


(* foreign declaration for write() *)

PROCEDURE write ( fildes : INT; buf : ADDRESS; nbyte : SizeT ) : SSizeT;


(* foreign declaration for unlink() *)

PROCEDURE unlink ( path : ARRAY OF CHAR ) : INT;


END unistd.